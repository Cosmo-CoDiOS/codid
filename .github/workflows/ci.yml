name: cosmo-codi-linuxd builder workflow

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - aarch64-unknown-linux-gnu

        include:
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            artifact_name: target/aarch64-unknown-linux-musl
            release_name: cosmo-linuxd-aarch64-musl
            cross: true
            strip: true

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: target/aarch64-unknown-linux-gnu
            release_name: cosmo-linuxd-aarch64-gnu
            cross: true
            strip: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2020-11-08
          target: ${{ matrix.target }}
      
      - name: Build project in release mode
        uses: marcopolo/cargo@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          command: build
          args: --release --all --locked --offline --verbose --target=${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      - name: Build project in debug mode
        uses: marcopolo/cargo@master
        with:
          command: build
          args: --all --locked --offline --verbose --target=${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      - name: 'Install (Cargo) binutils, if its release.'
        if: startsWith(github.ref, 'refs/tags/')
        run:
          cargo install cargo-binutils && rustup component add
          llvm-tools-preview

      - name: Strip the CoDirs image, if its a release
        if: startsWith(github.ref, 'refs/tags/')
        run: cargo strip --release -- --strip-all

      - name: Upload release artifact
        uses: actions/upload-artifact@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ matrix.release_name }}-release
          path: ./${{ matrix.artifact_name }}/release/codi-linuxd

      - name: Upload debug artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.release_name }}-debug
          path: ./${{ matrix.artifact_name }}/debug/codi-linuxd

      - name: Create release for cosmo-codi-linuxd
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./${{ matrix.artifact_name }}/release/codi-linuxd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
