---
name: Release builder for Linux-based ROMs

on:
  workflow_run:
    workflows: [CI test workflow]
    types: [completed]
    branches: [main]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
jobs:
  create-gh-release:
    name: Create release on GitHub.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Create release
        uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-release-linux:
    needs: [create-gh-release]
    name: Release uploader for the ${{ matrix.rom }} ROM.
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        rom: [gemian, sailfishos, nixos, postmarketos, droidian, ubports]
        target: [aarch64-unknown-linux-musl, x86_64-unknown-linux-musl]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache Rust assets
        id: rust-cache
        uses: Swatinem/rust-cache@v2
      - name: Configure Rust
        if: ${{ steps.rust-cache.outputs.cache-hit != 'true' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.72.1
          default: true
          components: llvm-tools-preview
          override: true
          target: ${{ matrix.target }}
          profile: minimal
      - name: Install Cross
        if: ${{ steps.rust-cache.outputs.cache-hit != 'true' }}
        uses: brndnmtthws/rust-action-cargo-binstall@v1.0.0
        with:
          packages: cross
      - name: Build & upload codid release for Linux-based ROMs.
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: codictl,codid
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
          archive: codid-${{ github.ref_name }}-release-linux-${{ matrix.rom }}
          features: ${{ matrix.rom }},stock-codi,codios-codi
          zip: all
          checksum: sha256
