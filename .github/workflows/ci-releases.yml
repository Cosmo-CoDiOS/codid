name: codid CI release builder

on:
    workflow_run:
        workflows: ["CI test workflow"]
        types: [completed]
        branches: [main]

permissions:
    contents: write

env:
    CARGO_TERM_COLOR: always
jobs:
    create-gh-release:
        name: Create release on GitHub.
        if: ${{ startsWith(github.ref, 'refs/tags/') && github.event.workflow_run.conclusion == 'success' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout sources
              uses: actions/checkout@v3

            - name: Create release
              uses: taiki-e/create-gh-release-action@v1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

    upload-release-linux:
        needs: [create-gh-release]
        if: ${{ startsWith(github.ref, 'refs/tags/') && github.event.workflow_run.conclusion == 'success' }}
        name: Release uploader for the ${{ matrix.rom }} ROM.
        runs-on: ubuntu-latest
        strategy:
            matrix:
                rom:
                    [
                        "gemian",
                        "sailfishos",
                        "nixos",
                        "postmarketos",
                        "droidian",
                        "android",
                    ]
                target:
                    [
                        "aarch64-unknown-linux-musl",
                        "x86_64-unknown-linux-musl",
                        "aarch64-linux-android",
                    ]
        steps:
            - name: Checkout sources
              uses: actions/checkout@v3
            - name: Cache Rust assets
              id: rust-cache
              uses: Swatinem/rust-cache@v2
            - name: Configure Rust
              if: ${{ steps.rust-cache.outputs.cache-hit != 'true' }}
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: 1.67.0
                  default: true
                  components: llvm-tools-preview
                  override: true
                  target: ${{ matrix.target }}
                  profile: minimal
            - name: Install Cross
              if: ${{ steps.rust-cache.outputs.cache-hit != 'true' }}
              uses: actions-rs/install@v0.1
              with:
                  crate: cross
                  version: latest
                  use-tool-cache: true
            - name: Build & upload codid release for Linux-based ROMs.
              if: ${{ matrix.rom != 'android' && matrix.target != 'aarch64-linux-android' }}
              uses: taiki-e/upload-rust-binary-action@v1
              with:
                  bin: codictl,codid
                  target: ${{ matrix.target }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  archive: codid-${{ github.ref }}-release-linux-${{ matrix.rom }}
                  features: ${{ matrix.rom }},stock-codi,codios-codi
                  zip: all
                  checksum: sha256
            - name: Build & upload codid release for Android ROMs.
              if: ${{ matrix.rom == 'android' && matrix.target == 'aarch64-linux-android' }}
              uses: taiki-e/upload-rust-binary-action@v1
              with:
                  bin: codictl,codid
                  target: ${{ matrix.target }}
                  token: ${{ secrets.GITHUB_TOKEN }}
                  archive: codid-${{ github.ref }}-release-android
                  features: ${{ matrix.rom }},stock-codi,codios-codi
                  zip: all
                  checksum: sha256
